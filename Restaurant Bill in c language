#include<stdio.h>
#include<string.h>
#include<stdlib.h>

struct items{
    char item[20];
    float price;
    int qty;
};

struct orders{
   char customer[50];
   char date[50];
   int numOfitems;
   struct items itm[50];
};
// functions to generate bills
void generateBillHeader( char name[50],char date[30]){
    printf("\n\n");
        printf("\t    Tandoori Zyka. Resturant");
        printf("\n\t   ---------------------------");
        printf("\nDate:%s",date);
        printf("\nInvoice To: %s",name);
        printf("\n");
        printf("----------------------------------------\n");
        printf("Items\t\t");
        printf("Qty\t\t");
        printf("Total\t\t");
        printf("\n----------------------------------------");
        printf("\n\n");
}
void generateBillBody(char item[30],int qty, float price){
    printf("%s\t\t",item);
        printf("%d\t\t",qty);
        printf("%.2f\t\t",qty * price);
        printf("\n");
}



void generateBillFooter(float total) {
    printf("\n");
    float dis = 0.1*total;
    float netTotal = total - dis;
    float cgst= 0.09*netTotal,grandTtotal=netTotal + 2*cgst;
    printf("----------------------------------------\n");
    printf("Sub Total\t\t\t%.2f",total);
    printf("\nDiscount @10%s\t\t\t%.2f","%",dis);
    printf("\n\t\t\t       -------");
    printf("\nNet Total\t\t\t%.2f",netTotal);
    printf("\nCGSt @9%s\t\t\t%.2f","%",cgst);
    printf("\nSGST @9%s\t\t\t%.2f","%",cgst);
    printf("\n----------------------------------------");
    printf("\nGrand Total\t\t\t%.2f",grandTtotal);
    printf("\n----------------------------------------\n");
}
int main() {
    int opt,n;
    struct orders ord;
    struct orders order;
    char saveBill = 'y', countFlag = 'y';
    char name[50];
    FILE * fp;
    //dashboard
    while(countFlag== 'y'){
    system("cls");
    float total;
    int invoiceFound = 0;
    printf("\t=============Tandoori Zyka. RESTAURANT===============");
    printf("\n\nPlease select your prefered operation");
    printf("\n\n1.Generate Invoice");
    printf("\n2.Show all Invoices");
    printf("\n3.Search Invoices");
    printf("\n4.Exit");

    printf("\n\nYour Choice:\t");
    scanf("%d",&opt);
    fgetc(stdin);
    switch(opt){
      case 1:
        system("cls");
        printf("\nPlease enter the name of the customer:\t ");
        fgets(ord.customer,50,stdin);
        ord.customer[strlen(ord.customer)-1] = 0;
        strcpy(ord.date,__DATE__);
        printf("\nPlease enter the number of items:\t");
        scanf("%d",&n);
        ord.numOfitems = n;
        for(int i=0;i<n;i++){
            fgetc(stdin);
            printf("\n");
            printf("Please enter  the  Dishes %d:\t",i+1);
            fgets(ord.itm[i].item,20,stdin);
            ord.itm[i].item[strlen(ord.itm[i].item)-1]=0;
            printf("Please enter  the  Quantity:\t");
            scanf("%d",&ord.itm[i].qty);
            printf("Please enter the unit Price:\t");
            scanf("%f",&ord.itm[i].price);
            total += ord.itm[i].qty * ord.itm[i].price;
        }

        generateBillHeader(ord.customer,ord.date);
        for(int i=0;i<ord.numOfitems;i++){
            generateBillBody(ord.itm[i].item,ord.itm[i].qty,ord.itm[i].price);
        }
        generateBillFooter(total);

        printf("\n Do you want to save the invoice [y/n]:\t");
        scanf("%s",&saveBill);

        if(saveBill == 'y'){
            fp = fopen("RestaurantBill.dat","a+");
            fwrite(&ord,sizeof(struct orders),1,fp);
            if(fwrite != 0)
            printf("\nSuccesfully Saved");
            else
            printf("\nError saving");
            fclose(fp);
        }
        break;

      case 2:
        system("cls");  // Clear the console
    
        // Attempt to open the file in read mode
        fp = fopen("RestaurantBill.dat", "r");
        if (fp == NULL) {
        printf("\nError opening file! Ensure the file exists.\n");
        break;
        }

        printf("\n*****Your Previous Invoices*****\n");

        // To store the total of all orders
         double grandTotal = 0; 
          
        // Initialize the total variable
        total = 0;

        // Read each order from the file
        while (fread(&order, sizeof(struct orders), 1, fp)) {
        // Reset total for the current order
        total = 0;

        // Debugging: Print order details for verification. For cross check 
        //printf("\nCustomer: %s, \nDate: %s, \nNumber of Items: %d\n", order.customer, order.date, order.numOfitems);

        // Generate the bill header
        generateBillHeader(order.customer, order.date);

        // Process each item in the current order
        for (int i = 0; i < order.numOfitems; i++) {
            // Debugging: Print item details for verification
            //printf("Item: %s,\nQuantity: %d,\nPrice: %.2f\n", order.itm[i].item, order.itm[i].qty, order.itm[i].price);
            
            generateBillBody(order.itm[i].item, order.itm[i].qty, order.itm[i].price);
            total += order.itm[i].qty * order.itm[i].price;
        }

        // Generate the bill footer with the total
        generateBillFooter(total); 
        }
        fclose(fp);  // Close the file
        break;

      case 3:
        printf("\nEnter the name of the customer:\t");
        //fgetc(stdin);
        fgets(name,50,stdin);
        name[strlen(name)-1] = 0;
        system("cls");
        fp = fopen("RestaurantBill.dat","r");
        printf("\n  *****Invoices of %s*****\n",name);
        while(fread(&order,sizeof(struct orders),1,fp)){
          if(!strcmp(order.customer,name)){
             generateBillHeader(order.customer,order.date);
             for(int i=0;i<order.numOfitems;i++){
             generateBillBody(order.itm[i].item,order.itm[i].qty,order.itm[i].price);
             total+=order.itm[i].qty * order.itm[i].price;
             }
             generateBillFooter(total);
             invoiceFound = 1;     
          }
          if(!invoiceFound){
            printf("Sorry the invoice for %s does not exists.",name);
          }

        }
        fclose(fp);
        break;

      case 4:
        printf("\n\t\t Bye Bye");
        exit(0);
        break;

        default:
        printf("Sorry Invalid option");
    }
    printf("\nDo you want to perform another operation ? [y/n]: ");
    scanf("%s",&countFlag);
    }
    printf("\n\t Task Executed Bye Bye");
    printf("\n\n");

    return 0;
}
